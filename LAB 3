#include <stdio.h>
#include <stdlib.h>

#define MAX 5 // Maximum size of the queue

// Global variables for the queue
int queue[MAX];
int front = -1;
int rear = -1;

// Function to check if the queue is full
int isFull() {
    return (rear == MAX - 1);
}

// Function to check if the queue is empty
int isEmpty() {
    return (front == -1 || front > rear);
}

// Function to insert an element into the queue
void enqueue(int value) {
    if (isFull()) {
        printf("Queue Overflow! Cannot insert %d.\n", value);
        return;
    }
    if (front == -1) { // First element to be inserted
        front = 0;
    }
    rear++;
    queue[rear] = value;
    printf("Inserted %d into the queue.\n", value);
}

// Function to delete an element from the queue
int dequeue() {
    if (isEmpty()) {
        printf("Queue Underflow! Cannot delete from an empty queue.\n");
        return -1; // Indicate that the queue is empty
    }
    int item = queue[front];
    front++;
    if (front > rear) { // Reset the queue
        front = -1;
        rear = -1;
    }
    printf("Deleted %d from the queue.\n", item);
    return item;
}

// Function to display the elements of the queue
void display() {
    if (isEmpty()) {
        printf("Queue is empty.\n");
        return;
    }
    printf("Queue elements: ");
    for (int i = front; i <= rear; i++) {
        printf("%d ", queue[i]);
    }
    printf("\n");
}

// Main function to test the queue implementation
int main() {
    int choice, value;

    while (1) {
        printf("\nQueue Operations:\n");
        printf("1. Insert\n");
        printf("2. Delete\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter an integer to insert: ");
                scanf("%d", &value);
                enqueue(value);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                exit(0);
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }

    return 0;
}
